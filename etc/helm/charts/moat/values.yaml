# Default values for moat.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
replicaCount: 3

# This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
image:
  # This sets the image repository.
  repository: moat
  # This sets the pull policy for images.
  pullPolicy: Never
  # Overrides the image tag whose default is the chart appVersion.
  tag: "latest"

# This is for the secrets for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets: []
# This is to override the chart name.
nameOverride: ""
fullnameOverride: ""

# This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# This is for setting Kubernetes Annotations to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
podAnnotations: {}
# This is for setting Kubernetes Labels to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

# This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/
service:
  # This sets the service type more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
  type: ClusterIP
  # This sets the ports more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports
  port: 23456

# This block is for setting environment variables more information can be found here: https://kubernetes.io/docs/tasks/inject-data-application/environment-variable-expose-pod-information/
env:
  - name: POD_NAME
    valueFrom:
      fieldRef:
        fieldPath: metadata.name
  - name: MOAT_LISTEN
    value: "0.0.0.0:23456"
  - name: MOAT_ROLE
    value: "cache"
  - name: MOAT_PEER
    value: "$(POD_NAME).moat:23456"
  # FIXME(MrCroxx): This should be dynamic.
  # - name: MOAT_BOOTSTRAP_PEERS
  #   value: "$(POD_NAME).moat:23456"
  - name: MOAT_BOOTSTRAP_PEERS
    value: "moat-0.moat:23456,moat-1.moat:23456,moat-2.moat:23456"
  - name: MOAT_S3_ENDPOINT
    value: "http://minio:9000"
  - name: MOAT_S3_ACCESS_KEY_ID
    value: "minioadmin"
  - name: MOAT_S3_SECRET_ACCESS_KEY
    value: "minioadmin"
  - name: MOAT_S3_BUCKET
    value: "default"
  - name: MOAT_S3_REGION
    value: "us-east-1"
  - name: MOAT_WEIGHT
    value: "1"
  - name: MOAT_MEM
    value: "1GiB"
  - name: MOAT_DISK
    value: "8GiB"
  - name: RUST_LOG
    value: "info"

# This block is for setting up the ingress for more information can be found here: https://kubernetes.io/docs/concepts/services-networking/ingress/
ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# This is to setup the liveness and readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
livenessProbe:
  httpGet:
    path: /api/health
    port: 23456
readinessProbe:
  httpGet:
    path: /api/health
    port: 23456

# This section is for setting up autoscaling more information can be found here: https://kubernetes.io/docs/concepts/workloads/autoscaling/
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: 
  - name: cache
    hostPath:
      path: /6536/cache
      type: DirectoryOrCreate

# Additional volumeMounts on the output Deployment definition.
volumeMounts:
  - name: cache
    mountPath: /cache
    subPathExpr: $(POD_NAME)

nodeSelector: {}

tolerations: []

affinity: {}
